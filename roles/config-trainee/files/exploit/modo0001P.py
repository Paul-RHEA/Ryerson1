from imaplib import IMAP4_SSL
from imaplib import ParseFlags
import re
import requests
import configparser

def open_conn(hostname, port, username, password):

    conn = IMAP4_SSL(hostname, port)
    conn.login(username, password)

    return conn

def clickLink(link):

    headers = {}

    response = requests.get(link, headers=headers, verify=False)
    print(response)

def getCreds(confFile):

    config = configparser.ConfigParser()
    config.read(confFile)
    return config['ACCESS']

###########################################################################
###########################################################################
###########################################################################
emailSubject = '"Opinion on Internal Policy"'
###########################################################################
###########################################################################
###########################################################################

cr = getCreds('/home/student/Templates/emailConfig.ini')
c = open_conn(cr['hostname'], cr['port'], cr['username'], cr['password'])


typ, data = c.select('INBOX', readonly=True)
#print('Total emails in INBOX: ' + str(int(data[0])))
typ, msg_ids = c.search(None, 'SUBJECT', emailSubject)

msg_ids = msg_ids[0].decode('utf-8')
#print(msg_ids)
msg_ids = msg_ids.split(" ")

for msg_id in msg_ids:
    typ, msg_data = c.fetch(msg_id, '(FLAGS)')
    deleted = False
    for res in msg_data:
        flags = ParseFlags(res)
        #print("msg_id: " + msg_id)
        for flag in flags:

            flag = flag.decode('utf-8')
            #print("\t" + flag)
            if (flag == "\\Deleted"):
                deleted = True
                break
    if(deleted == False):
        typ, msg_data = c.fetch(msg_id, '(BODY.PEEK[TEXT])')
        meta, msg = msg_data[0]
        msg = msg.decode('utf-8')
        msg = msg.replace("=3D", "=")
        #print(msg)
        links = re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\), ]|(?:%[0-9a-fA-F][0-9a-fAF]))+rid=[a-zA-Z0-9]+', msg)
        for link in links:
            if(link.find('/track') == -1):
                print(link)
                clickLink(link)
c.close()

c.logout()
